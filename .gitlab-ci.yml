image: h.eefocus.tech/devops/docker/ansible

variables:
  CI_DEBUG_TRACE: "false"

services:
  # - docker:dind
  - name: docker:stable-dind
    command: ["--insecure-registry=$CI_REGISTRY"]

stages:
  - preparation
  - installation

.common_runner: &common_runner
  retry: 1
  only:
    - master
  tags:
    - docker
  cache:
    # key: "$CI_COMMIT_REF_SLUG"
    # policy: push
    paths:
      # - /root/.ssh
      - /tmp/ansible

before_script:
  # - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
  - docker login -u ek -p ek "${CI_REGISTRY}"
  - mkdir -p ~/.ssh/
  - echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
  - echo "${SSH_SERVER_PRIVATE_KEY}" > ~/.ssh/id_rsa.server
  - chmod 600  -Rf ~/.ssh
  - mv ansible.cfg /root/.ansible.cfg
  - mv inventory /root/
  # - cat ~/.ssh/id_rsa

syntax_checking:
  <<: *common_runner
  stage: preparation
  script:
    - for job in  `ls *.yml`; do ansible-playbook $job -e running_host_group=bridge --syntax-check; done


deploy_bridge:
  <<: *common_runner
  stage: installation
  script:
    - ansible-playbook -v deploy.yml -e CI_JOB_URL="\"$CI_JOB_URL\"" -e running_host_group=bridge
  # when: manual
  
deploy_nginx:
  <<: *common_runner
  stage: installation
  script:
    - ansible-playbook -v deploy.yml -e CI_JOB_URL="\"$CI_JOB_URL\"" -e running_host_group=nginx
  # when: manual
  
deploy_jenkins:
  <<: *common_runner
  stage: installation
  script:
    - ansible-playbook -v deploy.yml -e CI_JOB_URL="\"$CI_JOB_URL\"" -e running_host_group=jenkins
  # when: manual
  
deploy_sys:
  <<: *common_runner
  stage: installation
  script:
    - ansible-playbook -v deploy.yml -e CI_JOB_URL="\"$CI_JOB_URL\"" -e running_host_group=sys
  # when: manual
